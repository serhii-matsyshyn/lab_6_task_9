"""
Game 'Target UA'

Description of the game:
The user receives randomly generated letters
of the Ukrainian alphabet
(5 letters, similar to the English version,
all letters are unique).
After that, he randomly receives a part of speech
("noun", "verb", "adjective", "adverb").
He must come up with at most words, up to and including 5 letters,
that belong to this part of speech
and begin with one of the generated letters.
"""

from typing import List
from typing import Tuple
from typing import Any
import random
import string


def generate_grid() -> List[str]:
    """ Generates a playing grid,
    similar to the English version of the game,
    but uses lowercase letters of the Ukrainian alphabet.

    :return: A list of generated letters (5 unique letters)
    :rtype: List[str]
    """
    pass


def get_words(filename: str, letters: Any[list, str]) -> list:
    """ Reads the dictionary file and
    returns the list of tuples: the word as part of the language.
    Parts of speech to be considered: "noun", "verb", "adjective", "adverb".

    :param filename: Filename of dictionary
    :type filename: str
    :param letters: 1 letter of the words that should be found
    :type letters: list, str
    :return: the list of tuples: the word as part of the language
    :rtype: list
    """
    pass


def check_user_words(user_words: List[str],
                     language_part: str,
                     letters: List[str],
                     dict_of_words: List[tuple]) -> Tuple[List[str]]:
    """ checks the words entered by the user
    (it is given a user_words - a list of words),
    using a list of letters from which to start words (list of letters),
    and checks which of the words entered by the user belong
    to the transmitted part of speech (language_part tape).
    Dict_of_words - list of word pairs -
    part of speech generated by the get_words function.
    The function returns a list of correct
    user words and a list of words that the user missed

    :param user_words: A list of words
    :type user_words: List[str]
    :param language_part: Part of language
    :type language_part: str
    :param letters: A list of letters from which to start words
    :type letters: List[str]
    :param dict_of_words: List of word pairs
    :type dict_of_words:
    :return: A list of correct user words and
    a list of words that the user missed
    :rtype: Tuple[List[str]]
    """
    pass


def main():
    """
    Main function of the game
    """
    pass


if __name__ == '__main__':
    main()
